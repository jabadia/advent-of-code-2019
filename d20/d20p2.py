from collections import defaultdict

from utils.test_case import TestCase
import heapq

INPUT = """
                                     L           D A A             K     R   Y                                             
                                     N           E A W             C     Y   L                                             
  ###################################.###########.#.#.#############.#####.###.###########################################  
  #...#...#.#.......#...........#...#.....#.#.#.....#.....#.#...#.....#.....#.#.#.....#...#.............#.....#.#.....#.#  
  ###.###.#.#######.#######.###.###.#.#####.#.###.#.#.#####.###.#.#.#.###.#.#.#.#.#####.###.#.###############.#.#.###.#.#  
  #.......#...#.......#...#.#.........#.#.#.....#.#.#...#...#.#...#.#.#...#.#.#.#...#...#.#.#.#.#...#.#.#.#.#.......#.#.#  
  #.###.#.#.#######.#.###.###.#####.#.#.#.###.#####.#.#####.#.#.###########.#.###.#.#.###.###.#.#.###.#.#.#.#.#.#####.#.#  
  #.#.#.#.#.#...#...#...#.....#.....#.....#.#.#.#...#...#.....#.......#...#.#.....#...#.#.#.#...........#.#.#.#...#.....#  
  ###.###.#.#.#.#######.#####.#######.#####.#.#.###.###.#.#.###.###.#####.#.#####.#.###.#.#.#.#####.###.#.#.###########.#  
  #.........#.#.....#.....#.#...#...#...#.#.......#.#.....#.#.....#.#...........#.#.#.....#.......#.#.#...#.#.#...#...#.#  
  ###.###.#########.###.#.#.#.###.###.###.###.###.#.###.###.#######.#######.###.###.#.###.#.#.#.###.#.#####.#.###.###.#.#  
  #...#.......#.#.....#.#.......#.......#.....#.......#.#.....#.#.#.....#.....#.#.....#...#.#.#...#.#...#.......#...#...#  
  #######.#.#.#.#.#.#######.#.#####.#.#######.#.#.#.#####.#####.#.#.#####.#.#######.#######.#########.#####.#####.#####.#  
  #...#...#.#...#.#.........#.#.....#.#.......#.#.#.#.....#...#.#...#...#.#.#.........#...........#.#.......#...#.......#  
  ###.#######.#####.#####.#.###.#####.###.###.#######.#####.###.#.#.#.#####.###.#.#.###.###.#######.#######.#.#####.#.#.#  
  #.....#.#.#.#.#...#.#...#.#.#.#.#.#...#.#.....#.............#...#...#.......#.#.#...#.#.#.#...#.....#...#.....#.#.#.#.#  
  #.###.#.#.#.#.###.#.#######.###.#.#.#######.#########.###.#####.#.#######.#####.#.###.#.###.#####.#####.###.###.###.###  
  #.#.............#.#...#.....#.........#.#.#.#...#...#.#...#...#.#.#...#.......#.#.#.......#...#...#.#.....#.#.#...#...#  
  ###.###.#######.#.###.###.#####.#.#.###.#.#.#.###.###.###.#.#####.#.#####.#######.#.###.###.###.###.#.#.#.#.#.###.#.###  
  #.....#.#.#.#.......#.#.....#...#.#.......#...#.....#.#.......#.....#.#.......#.....#.....#.#.....#.#.#.#.....#...#...#  
  #########.#.#.###.###.###.#####.#####.#.#.#.#####.#######.#######.#.#.#.#.#######.#######.#.#.###.#.#####.###.###.#.###  
  #...#.#.......#.#.#.#...........#...#.#.#.#...#.....#.....#...#...#.#...#.#.........#...#.......#.#.#.#...#.#.#.....#.#  
  #.###.#.#.#####.###.#.###.#.#.#####.#.#######.#.#.#####.#.#.#####.#.#####.#.###########.###.#.#####.#.#####.#.###.###.#  
  #.#.....#...#.....#...#...#.#.....#.....#.......#.#.#...#.#...#...#.#.....#.#.....#...#.#.#.#.#...#...#.....#...#.#...#  
  #.#####.#.#####.###########.#######.#############.#.###.###.#.#.###.###.#.#.#.#.#.#.#.#.#.#####.#####.###.#.#.###.#.#.#  
  #.#.....#...#...#...#.#.#.#.#.......#.#...#...........#...#.#.....#.#.#.#.#...#.#...#.#.#...#.#.....#.....#...#.....#.#  
  #.###########.#.###.#.#.#.#.#######.#.#.#######.#########.#.#########.#.#######.#.#.###.#.###.#.###.#.#######.###.#####  
  #.......#.#...#...........#.#.......#.#.#.....#.....#...#.#.......#.#...#.......#.#.............#.#.#.#...#.......#...#  
  #.#####.#.#.###.#####.#######.#.###.#.#.###.#.###.###.#.#.#####.###.#.#.#######.#########.#.#####.#######.###.#.###.###  
  #.#.#.....#.#.....#.#...#.#.#.#.#.........#.#...#.....#.#.#.#.....#...#...#...#.......#.#.#.#.#.#.#...#...#.#.#.....#.#  
  ###.#####.###.#####.#.###.#.#####.#######.#.###.#.#######.#.#.###.#.#########.###.#.###.#####.#.#.#.###.###.#####.###.#  
  #.#.#...#...#.#.#.#...#.......#...#...#...#...#...#.........#.#...#.....#.#.......#...#.#...#.#...#.#...#...#.....#...#  
  #.#.#.###.#####.#.###.#####.#.#######.###.###.###.#####.#######.#.#.#####.#.#######.###.###.#.#.###.#.#####.#####.#.#.#  
  #.#.......#.............#...#.............#.....#.#.........#...#.#...#...........#...#.#.#.....#.....#.#.....#.....#.#  
  #.#####.#####.#.#.#.###.#######.#######.###.###########.#####.#######.#######.#########.#.#.###.###.###.###.#####.#####  
  #.#.#.#.....#.#.#.#.#.#.#.......#      X   A           U     R       T       G        #...#.#...#.#.....#.#.#.#.#...#.#  
  #.#.#.#.#########.###.#.#####.#.#      F   I           F     Y       Z       O        ###.###.###.###.###.#.#.#.###.#.#  
  #...#...#...#.......#...#.#...#.#                                                     #.#.#.#...#...#.....#.....#.#...#  
  ###.###.###.#########.#.#.#######                                                     #.#.#.###.#.#####.#####.###.###.#  
  #.#.....#.........#.#.#.....#.#.#                                                   GP..................#.......#.....#  
  #.#####.#.#########.#######.#.#.#                                                     ###.#.###.#.#####.#.###.#.#.#.#.#  
  #...#.#.......#.#.#.#.#.........#                                                     #...#.#.#.#...#.....#...#...#.#..TZ
  #.###.#.#######.#.#.#.###.###.#.#                                                     #######.#########################  
FB......#.#...#.#.#.........#...#.#                                                     #.....#.........#.......#........GP
  #.#####.#.###.#.#####.###.#.#####                                                     #.###.#.#####.#.#.#####.#.#####.#  
  #...#...........#.#...#.#.#.#....EF                                                   #.#...#.....#.#...#.....#...#...#  
  #.#####.#.###.#.#.#####.#.#.###.#                                                     #.#.#.###.#######.#.#######.###.#  
  #.......#.#...#...........#.....#                                                   FB..#.#.#.......#.#.#...#.....#...#  
  #.#.#.###.#########.###########.#                                                     #.#.###.#######.#.#.#.###.#.#####  
  #.#.#...#.#...#...#...#.....#.#.#                                                     #.#.............#.#.#.....#.#...#  
  ###.#######.###.#######.###.#.###                                                     ###.###.###.#.###.#.#.#######.###  
UB..#...#.....#...#...#.#.#.......#                                                     #.#.#.#...#.#...#.#.#.#...#.....#  
  #.#######.#.###.###.#.#.#.#.#.#.#                                                     #.###.###########.#.###.#.#.###.#  
  #.#...#...#.#...#.....#.#.#.#.#..UQ                                                 LC..#.....#.#.#.#.#.#.#...#...#...#  
  #.#.#.#.#.###.#.#.#.###.###.#####                                                     #.#.###.#.#.#.#.#######.###.#.###  
  #...#...#.....#...#.....#...#.#.#                                                     #.....#.#...#.#.#...#.#...#.#.#.#  
  #############################.#.#                                                     ###.#.#.#.###.#.###.#.#.#####.#.#  
  #.........#.#...................#                                                     #...#.#...................#......MA
  ###.#####.#.#.###.###.#######.#.#                                                     #########.#######################  
  #...#.....#.....#.#.......#...#.#                                                     #.......#.#.#.#.........#...#....RR
  #.#.#.#.###.#.#######.#####.#####                                                     #.#####.###.#.#.###.#.###.#.#.#.#  
LW..#.#.#.....#.#...#.#...#...#....KC                                                 UB......#.#.......#...#.....#...#.#  
  #.#######.#####.###.#######.###.#                                                     ###.###.###.#.#.###.#.#######.#.#  
  #.#.....#.#.#.#.#...#.#.#.......#                                                   AW....#...#...#.#.#...#...#.#.#.#..EF
  ###.#######.#.#.###.#.#.###.#####                                                     #.###.###.#.#############.#.#.###  
  #.............#...........#.#...#                                                     #.#.#.....#.#.#...#.....#.#.....#  
  #.###.#.#.###.#.###.#.#.#.###.#.#                                                     ###.###.#####.#.#####.###.#######  
  #.#...#.#.#.....#...#.#.#.....#..TF                                                 PF....#.....#.....#.#.............#  
  #.###.#########.#########.###.#.#                                                     #.#########.###.#.#.#####.#######  
UQ..#.....#.#...#.#.#.#...#.#.#.#.#                                                     #.#.#.#...#...#...#.#.....#...#.#  
  ###.#####.#.###.#.#.#.#####.#.###                                                     #.#.#.###.#.#.###.#.#.#####.###.#  
  #.#.#.......#.#.#.....#.....#.#.#                                                     #.#...#.#.#.#.#...#.#.#..........AI
  #.#########.#.###.#.#.#.###.###.#                                                     #.#.#.#.#.#.#.###.#.#.#####.###.#  
GO....#.#.#.#...#.#.#.#.....#.#...#                                                     #...#.......#.#.....#.......#.#.#  
  #.###.#.#.#.###.###.#.#####.#.#.#                                                     #####################.#######.###  
  #.......#...#.....#.#...#.#.#.#..LW                                                   #...................#...#........QY
  #.###.#.#.#.###.#.#.#.###.#.#.###                                                     #.#.#####.#.###.###.#####.#.###.#  
  #.#...#...#.....#...#...#.......#                                                     #.#...#...#...#.#...#.#.#.#.#...#  
  #####.###.#.###.#################                                                     ###.#########.#.#.#.#.#.###.###.#  
  #...#.#...#.#.......#.#...#.....#                                                   MA..#...#...#...#.#.#.......#.#.#.#  
  ###.#.###.#########.#.#.#.#.###.#                                                     #.#.#####.###########.#.#.#.#.#.#  
  #...#.#.#.#.......#.#...#...#....YC                                                   #.....#...#.#...#.#.#.#.#.....#.#  
  #.#.###.#########.###.#######.#.#                                                     #########.#.#.###.#.#############  
  #.#...#.#.#.#.#.....#.......#.#.#                                                     #.#.....#.......#...........#...#  
  ###.###.#.#.#.###.#.#####.#.###.#                                                     #.#.###.#.#####.#.###.#.#.#.#.###  
TF..................#.......#.#.#.#                                                     #.#...#.......#.....#.#.#.#......UF
  #.#.#.#####.###.#.#.###.#.###.###                                                     #.###.###.#.###.#.#######.#.###.#  
  #.#.#...#.....#.#.#...#.#.......#                                                   QY..#.....#.#.#...#...#.#...#.#...#  
  #.###.#.###.#.###.#.#####.###.#.#                                                     #.#.#.#.#########.###.#.#.#####.#  
  #.#.#.#.#...#...#.#.#.#...#...#.#                                                     #...#.#...#.........#...#.....#.#  
  #.#.###.###.#.#####.#.#.#.#.#####    R         T       D Y         W L           R    ###.#.#.###.#.#####.#.#####.#####  
  #.....#.#.#.#.....#...#.#.#.....#    R         B       E L         T N           A    #...#.#.#...#.....#.#.#.......#.#  
  #.#.#####.#.#####.#.###.#####.#######.#########.#######.#.#########.#.###########.###########.#####.#.###.#######.###.#  
  #.#.#.#.......#.#.#.#.#...#.#.#...#.....#.......#...#...#...#.......#...#...#.......#.#.#...#...#...#.#.......#.......#  
  ###.#.#.#####.#.#####.#.#.#.###.###.###.#######.#.#.###.#.#.#.#######.###.#.#.#######.#.###.#.#####.#####.#.#.###.#.###  
  #.....#.....#...#.....#.#.#...........#...#...#.#.#...#.#.#.#.#...#.......#.#...#.........#...#.#.....#...#.#.#...#...#  
  ###.###.#.#####.###.###.#####.#.#.#####.#####.#.#.###.#.###.#.#.#.#########.###.#.#####.#.###.#.#####.#.#.###.###.#.###  
  #.....#.#.#.......#.#.#...#...#.#.#.#...#.#.#.#.#.#.....#.#.#...#.....#.#...#.......#.#.#...#.....#...#.#.#.....#.#...#  
  ###.###.#######.###.#.#######.#####.###.#.#.#.#.#.#######.#.#####.###.#.#.#####.#.###.#####.#.#.#####.###.#######.###.#  
  #...#...#.................#.#.#.#.#.......#.....#.#.....#.#.#.#...#.#.#.#.#.#...#.#.#...#.#.#.#.#.......#...#.......#.#  
  ###.#########.#####.#.#####.###.#.###.###.###.###.#.###.#.#.#.###.#.###.#.#.#.#.###.###.#.#####.#####.#.#####.#.#.###.#  
  #.......#.....#...#.#.....#...#.......#...#.....#.....#...#.#.......#...#...#.#.#...........#.#.#.#...#.#...#.#.#...#.#  
  ###.#####.###.###.#.###.###.#.###.#####.#.#####.#######.###.#####.#####.#.#.#.###.###.#.###.#.###.#.#######.#.#####.#.#  
  #.......#.#...#...#.#.....#.#.....#.....#.#.....#.......#...#...#...#...#.#.#.......#.#...#.......#.#.#.........#...#.#  
  #.#.#.#.#.#.#####.#.#####.###.#####.#####.###.###.#.#.#####.#.#.###.#.#.###.#####.#######.###########.#####.#.#######.#  
  #.#.#.#.#.#...#.......#...#...#.....#.....#.#...#.#.#...#...#.#.....#.#.....#.......#...#.#.#...........#...#...#.....#  
  ###.#.#####.#####.#.#.###.#######.#####.###.###.#.#######.###.#######.#####.#.#.#######.###.###.#####.#####.#.#####.###  
  #...#...#.....#...#.#.#.....#.#...#.#.......#.#.#.....#.....#...#.#...#.#...#.#.....#.#...#.#.#.#.#...#.....#...#.....#  
  #####.#####.#####.#.#.###.###.#####.###.#####.#.#.#####.###.#.###.###.#.###.#.#######.#.###.#.#.#.#####.#####.#.#.#.###  
  #.....#.#...#.....#.#.#...#.#.............#...#.#.#.#.....#.#...#.........#.#...#.#...#.....#.#.....#.#.#.....#.#.#...#  
  #####.#.#####.#####.#######.#.#.#####.###.#.###.#.#.#######.#.#.#.#####.#.#.#.###.#.###.#####.#.#.###.#####.#.###.#.###  
  #.#.........#.#.....#.#...#.#.#.#.#...#...#.#...#...#.....#.#.#.#...#...#.#.#...................#...#...#.#.#...#.#...#  
  #.#.#.###.#######.###.###.#.#####.#####.###.###.#.#.###.###.#.#######.#######.#.#.#.#.#######.###.#.#.###.#.###.#.#.###  
  #...#...#.#.....#...#...#.#...#.#.#.......#.#...#.#...#.#...#.#.#.....#.....#.#.#.#.#.....#...#.#.#...#.......#.#.#.#.#  
  #.#.#######.#.###.#####.#.###.#.#.###.#####.#.###.#####.###.#.#.###.#.###.###.###.#.#######.###.#.#####.#.#######.###.#  
  #.#.#.#.#.#.#.....#...#...............#.........#.#.#.#.....#.....#.#.#.....#...#.#.#...#.......#.....#.#.......#.....#  
  #.#.#.#.#.###.#######.#.###.#######.###########.#.#.#.###.###.#.#.###.###.#########.#.###.#.#.#.###.#####.#######.###.#  
  #.#.#.#...#.....#.......#...#.#.#...#...#.#.#.#.#.....#.....#.#.#.#...#...#.#.....#.#.#...#.#.#...#...#.#.......#...#.#  
  ###.#.###.#.#.#####.#########.#.###.###.#.#.#.#.#####.#####.###.#####.#.###.#####.#.#.###.###.#####.###.#####.#.#.###.#  
  #...#.......#.....#.#.#.#.#.........#.#.........#...#...#...#...#...#...#.....#.........#.#.#.....#.........#.#.#.#.#.#  
  #.###.#.###.###.#####.#.#.#.#####.#.#.#.#####.###.#.###.###.#.###.###.###.#.#######.#######.#######.#####.###.#####.###  
  #.#...#.#...#...#...........#.#...#.#...#.......#.#...#.#...#.......#.....#.#.#.....#.#.....#.#...#.....#.#.....#.#...#  
  #.#####.#.#####.###.#.#.#.#.#.#.#.#.###########.#.###.#.###.#####.#.#.#####.#.#.#.###.###.###.#.#####.#.#.#.#.###.#.###  
  #...#...#...#...#...#.#.#.#.#...#.#.....#.......#...#...#...#.....#.#...#.....#.#...................#.#.#.#.#.........#  
  #####################################.#####.#######.#######.###.#.#######.#########.###################################  
                                       P     W       Y       R   Z X       L         T                                     
                                       F     T       C       A   Z F       C         B                                     
"""

TEST_CASES = [
    TestCase("""
         A           
         A           
  #######.#########  
  #######.........#  
  #######.#######.#  
  #######.#######.#  
  #######.#######.#  
  #####  B    ###.#  
BC...##  C    ###.#  
  ##.##       ###.#  
  ##...DE  F  ###.#  
  #####    G  ###.#  
  #########.#####.#  
DE..#######...###.#  
  #.#########.###.#  
FG..#########.....#  
  ###########.#####  
             Z       
             Z       
""", 26),
    TestCase("""
             Z L X W       C                 
             Z P Q B       K                 
  ###########.#.#.#.#######.###############  
  #...#.......#.#.......#.#.......#.#.#...#  
  ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  
  #.#...#.#.#...#.#.#...#...#...#.#.......#  
  #.###.#######.###.###.#.###.###.#.#######  
  #...#.......#.#...#...#.............#...#  
  #.#########.#######.#.#######.#######.###  
  #...#.#    F       R I       Z    #.#.#.#  
  #.###.#    D       E C       H    #.#.#.#  
  #.#...#                           #...#.#  
  #.###.#                           #.###.#  
  #.#....OA                       WB..#.#..ZH
  #.###.#                           #.#.#.#  
CJ......#                           #.....#  
  #######                           #######  
  #.#....CK                         #......IC
  #.###.#                           #.###.#  
  #.....#                           #...#.#  
  ###.###                           #.#.#.#  
XF....#.#                         RF..#.#.#  
  #####.#                           #######  
  #......CJ                       NM..#...#  
  ###.#.#                           #.###.#  
RE....#.#                           #......RF
  ###.###        X   X       L      #.#.#.#  
  #.....#        F   Q       P      #.#.#.#  
  ###.###########.###.#######.#########.###  
  #.....#...#.....#.......#...#.....#.#...#  
  #####.#.###.#######.#######.###.###.#.#.#  
  #.......#.......#.#.#.#.#...#...#...#.#.#  
  #####.###.#####.#.#.#.#.###.###.#.###.###  
  #.......#.....#.#...#...............#...#  
  #############.#.#.###.###################  
               A O F   N                     
               A A D   M                     
""", 396)
]


def move(pos, direction):
    y, x = pos
    if direction == '<':
        return y, x - 1
    elif direction == '^':
        return y - 1, x
    elif direction == '>':
        return y, x + 1
    elif direction == 'v':
        return y + 1, x


def bfs(maze, portals, start, outer_x, outer_y):
    visited, queue = set(), [(0, start)]
    graph = {}
    while queue:
        dist, vertex = heapq.heappop(queue)
        if vertex not in visited:
            visited.add(vertex)
            for direction in '<^>v':
                pos = move(vertex, direction)
                portal = portals.get(pos)
                if portal and pos != start:
                    is_outer = pos[0] in outer_y or pos[1] in outer_x
                    graph[(portal, -1 if is_outer else +1)] = dist + 1  # 0 if portal == 'ZZ' else
                elif maze.get(pos) == '.':
                    heapq.heappush(queue, (dist + 1, pos))
    return graph


def solve(input):
    lines = list(filter(None, input.split('\n')))
    lines = [('*' * (len(lines[0]) + 2))] + ['*' + line + '*' for line in lines] + [('*' * (len(lines[0]) + 2))]
    maze = {}
    portals = {}
    for y, line in enumerate(lines):
        for x, c in enumerate(line):
            if c in '.#':
                maze[(y, x)] = c
            elif c.isalpha():
                if lines[y+1][x].isalpha() and lines[y+2][x] == '.':  # down
                    portals[(y+2, x)] = ''.join(sorted([c, lines[y+1][x]]))
                elif lines[y-1][x].isalpha() and lines[y-2][x] == '.':  # up
                    portals[(y-2, x)] = ''.join(sorted([c, lines[y-1][x]]))
                elif lines[y][x - 1].isalpha() and lines[y][x - 2] == '.':  # left
                    portals[(y, x - 2)] = ''.join(sorted([c, lines[y][x - 1]]))
                elif lines[y][x+1].isalpha() and lines[y][x+2] == '.':  # right
                    portals[(y, x+2)] = ''.join(sorted([c, lines[y][x+1]]))

    outer_x = min(x for y, x in portals), max(x for y, x in portals)
    outer_y = min(y for y, x in portals), max(y for y, x in portals)

    # print(portals)

    graph = {}
    for pos, portal in portals.items():
        is_outer = pos[0] in outer_y or pos[1] in outer_x
        # separar en internos y externos
        graph[(portal, -1 if is_outer else 1)] = bfs(maze, portals, pos, outer_x, outer_y)

    # print(graph)

    # shortest path
    visited, queue = set(), [(0, 0, ('AA', -1), [])]
    while queue:
        dist, level, vertex, path = queue.pop(0)  # heapq.heappop(queue)
        # print(dist, level, vertex, queue, graph[vertex] if vertex[0] not in ['AA','ZZ'] else '-')
        if (vertex, level) not in visited:
            visited.add((vertex, level))
            if vertex[0] == 'ZZ' and level == -1:
                print(path)
                return dist - 1
            for next_vertex, next_dist in graph[vertex].items():
                # heapq.heappush(queue, (dist + next_dist, next_vertex))
                if next_vertex[0] in ['AA', 'ZZ'] and level > 0:
                    continue
                elif next_vertex[0] != 'ZZ' and level + next_vertex[1] < 0:
                    continue
                else:
                    queue.append((dist + 1 + next_dist, level + next_vertex[1], (next_vertex[0], next_vertex[1] * -1), path + [(next_vertex, level + next_vertex[1])]))
            queue = sorted(queue)

    return None


if __name__ == '__main__':
    for case in TEST_CASES:
        result = solve(case.case)
        case.check(result)

    print(solve(INPUT))
